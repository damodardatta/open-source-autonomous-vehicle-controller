import { _ as _imports_0, a as _imports_1 } from "./chunks/PullRequest.ae330646.js";
import { _ as _export_sfc, o as openBlock, c as createElementBlock, V as createStaticVNode } from "./chunks/framework.ce59e187.js";
const __pageData = JSON.parse('{"title":"Make changes in your local repository","description":"","frontmatter":{},"headers":[],"relativePath":"contribute/code/contribute.md"}');
const _sfc_main = { name: "contribute/code/contribute.md" };
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="make-changes-in-your-local-repository" tabindex="-1">Make changes in your local repository <a class="header-anchor" href="#make-changes-in-your-local-repository" aria-label="Permalink to &quot;Make changes in your local repository&quot;">​</a></h1><p>Use a text editor or IDE to make the changes you planned to the files in your local repository. Because you checked out a branch in the previous step, any edits you make will only affect that branch.</p><h2 id="commit-your-changes" tabindex="-1">Commit your changes <a class="header-anchor" href="#commit-your-changes" aria-label="Permalink to &quot;Commit your changes&quot;">​</a></h2><p>After you make a set of changes, use</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-A</span></span></code></pre></div><p>to stage your changes and</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">DESCRIPTION OF CHANGES</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>to commit them.</p><p>For example, I used</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fix typos in Documentation</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>for one of my commits.</p><p>If you are making multiple sets of changes, it&#39;s a good practice to make a commit after each set.</p><h2 id="push-your-changes-to-your-fork" tabindex="-1">Push your changes to your fork <a class="header-anchor" href="#push-your-changes-to-your-fork" aria-label="Permalink to &quot;Push your changes to your fork&quot;">​</a></h2><p>When you are done making all of your changes, upload these changes to your fork using</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">BRANCH_NAME</span></span></code></pre></div><p>This &quot;pushes&quot; your changes to the &quot;BRANCH_NAME&quot; branch of the &quot;origin&quot; (which is your fork on GitHub).</p><p>For example, I used</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">doc-fixes</span></span></code></pre></div><h2 id="begin-the-pull-request" tabindex="-1">Begin the pull request <a class="header-anchor" href="#begin-the-pull-request" aria-label="Permalink to &quot;Begin the pull request&quot;">​</a></h2><p>Return to your fork on GitHub, and refresh the page. You may see a highlighted area that displays your recently pushed branch:</p><p><img src="' + _imports_0 + '" alt="Begin Pull Request"></p><p>Click the Compare &amp; pull request button to begin the pull request.</p><p>(Alternatively, if you don&#39;t see this highlighted area, you can switch to your branch using the Branch button and then click the New pull request button.)</p><h2 id="create-the-pull-request" tabindex="-1">Create the pull request <a class="header-anchor" href="#create-the-pull-request" aria-label="Permalink to &quot;Create the pull request&quot;">​</a></h2><p>When opening a &quot;pull request&quot;, you are making a &quot;request&quot; that the project repository &quot;pull&quot; changes from your fork. You will see that the project repository is listed as the &quot;base repository&quot;, and your fork is listed as the &quot;head repository&quot;:</p><p><img src="' + _imports_1 + '" alt="Pull Request"></p><p>Before submitting the pull request, you first need to describe the changes you made (rather than asking the project maintainers to figure them out on their own). You should write a descriptive title for your pull request, and then include more details in the body of the pull request. If there are any related GitHub issues, make sure to mention those by number. The body can include Markdown formatting, and you can click the <strong>Preview</strong> tab to see how it will look.</p><p>Below the pull request form, you will see a list of the commits you made in your branch, as well as the &quot;diffs&quot; for all of the files you changed.</p><p>If everything looks good, click the green <strong>Create pull request</strong> button!</p>', 29);
const _hoisted_30 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_30);
}
const contribute = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  contribute as default
};
