import { _ as _export_sfc, o as openBlock, c as createElementBlock, V as createStaticVNode } from "./chunks/framework.ce59e187.js";
const _imports_0 = "/open-source-autonomous-vehicle-controller/assets/settings.844edde6.png";
const _imports_1 = "/open-source-autonomous-vehicle-controller/assets/pages.be9f85a6.png";
const _imports_2 = "/open-source-autonomous-vehicle-controller/assets/deploy.7d9067c1.png";
const _imports_3 = "/open-source-autonomous-vehicle-controller/assets/site.b06c9f4c.png";
const __pageData = JSON.parse('{"title":"Deploy Your Website on Github Pages","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"contribute/website/deploy.md"}');
const _sfc_main = { name: "contribute/website/deploy.md" };
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="deploy-your-website-on-github-pages" tabindex="-1">Deploy Your Website on Github Pages <a class="header-anchor" href="#deploy-your-website-on-github-pages" aria-label="Permalink to &quot;Deploy Your Website on Github Pages&quot;">​</a></h1><p>The following guides are based on some shared assumptions:</p><ul><li><p>The Website is inside the <code>documentation/docs</code> directory of your project.</p></li><li><p>You are using the default build output directory (<code>.vitepress/dist</code>).</p></li><li><p>VitePress is installed as a local dependency in your project, and you have set up the following scripts in your <code>package.json</code>:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">docs:dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">OSAVC dev docs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">docs:build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">OSAVC build docs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">docs:preview</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">OSAVC preview docs</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>All of the above files are present when you clone the repository, do not change them.</p></div><h2 id="build-and-test-locally" tabindex="-1">Build and Test Locally <a class="header-anchor" href="#build-and-test-locally" aria-label="Permalink to &quot;Build and Test Locally&quot;">​</a></h2><ol><li><p>Run this command to build the docs:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docs:build</span></span></code></pre></div></li><li><p>Once built, preview it locally by running:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docs:preview</span></span></code></pre></div><p>The <code>preview</code> command will boot up a local static web server that will serve the output directory <code>.vitepress/dist</code> at <code>http://localhost:4173</code>. You can use this to make sure everything looks good before pushing to production.</p></li><li><p>You can configure the port of the server by passing <code>--port</code> as an argument.</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">docs:preview</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">OSAVC preview docs --port 8080</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></li></ol><p>Now the <code>docs:preview</code> method will launch the server at <code>http://localhost:8080</code>.</p><h2 id="setting-a-public-base-path" tabindex="-1">Setting a Public Base Path <a class="header-anchor" href="#setting-a-public-base-path" aria-label="Permalink to &quot;Setting a Public Base Path&quot;">​</a></h2><p>By default, our site is going to be deployed at the root path of a domain (<code>/</code>).</p><p><strong>Example:</strong> We&#39;re using Github Pages and deploying to <code>user.github.io/open-source-autonomous-vehicle-controller/</code>, thus we set our <code>base</code> to <code>/open-source-autonomous-vehicle-controller/</code>.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">base</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/open-source-autonomous-vehicle-controller/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span></code></pre></div><h2 id="platform-guide" tabindex="-1">Platform Guide <a class="header-anchor" href="#platform-guide" aria-label="Permalink to &quot;Platform Guide&quot;">​</a></h2><h3 id="github-pages" tabindex="-1">GitHub Pages <a class="header-anchor" href="#github-pages" aria-label="Permalink to &quot;GitHub Pages&quot;">​</a></h3><ol><li><p>In your theme config file, <code>documentation/docs/.vitepress/config.ts</code>, set the <code>base</code> property to the name of your GitHub repository. eg : <strong>base: &#39;/open-source-autonomous-vehicle-controller/&#39;,</strong></p></li><li><p>Make sure you have build the project using:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev:build</span></span></code></pre></div></li><li><p>Now navigate to the base of the repository and commit your code and push it to your forked repo.</p></li><li><p>Now for deploying your website follow the steps given below.</p></li></ol><ul><li>use the following command to add dist folder to the staging area</li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">documentation/docs/.vitepress/dist</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span></span></code></pre></div><ul><li><p>-f is required, as your .gitignore will not consider your /dist folder. Hence it requires for git to consider it as well.</p></li><li><p>Now run the following command in your terminal</p></li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Adding dist</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">subtree</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--prefix</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/documentation/docs/.vitepress/dist</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gh-pages</span></span></code></pre></div><ul><li><p>This will push your dist folder to the gh-pages branch</p></li><li><p>Now navigate to Settings -&gt; Pages</p></li></ul><p><img src="' + _imports_0 + '" alt="Settings"></p><p><img src="' + _imports_1 + '" alt="Pages"></p><ul><li>Set Build and deployment as <ol><li>Source -&gt; Deploy from a branch</li><li>Branch -&gt; gh-pages</li></ol></li></ul><p><img src="' + _imports_2 + '" alt="Deploy"></p><ul><li><p>Click on Save</p></li><li><p>You can see the Link to your website:</p></li></ul><p><img src="' + _imports_3 + '" alt="View Website"></p><p>For Creating a Pull request follow the instructions <a href="./../website/pullRequest">here</a></p>', 27);
const _hoisted_28 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_28);
}
const deploy = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  deploy as default
};
