import { _ as _export_sfc, o as openBlock, c as createElementBlock, V as createStaticVNode } from "./chunks/framework.ce59e187.js";
const _imports_0 = "/open-source-autonomous-vehicle-controller/assets/Board_Architecture.4fa9c54c.png";
const _imports_1 = "/open-source-autonomous-vehicle-controller/assets/OSAVC_Board_PinOut.7dab9d0e.png";
const _imports_2 = "/open-source-autonomous-vehicle-controller/assets/J19.11eba78b.png";
const _imports_3 = "/open-source-autonomous-vehicle-controller/assets/J13.453b3624.png";
const _imports_4 = "/open-source-autonomous-vehicle-controller/assets/J14.3e7bd174.png";
const _imports_5 = "/open-source-autonomous-vehicle-controller/assets/J15.0225b835.png";
const _imports_6 = "/open-source-autonomous-vehicle-controller/assets/J20.6d2fd88b.png";
const _imports_7 = "/open-source-autonomous-vehicle-controller/assets/J21.e412cd3c.png";
const _imports_8 = "/open-source-autonomous-vehicle-controller/assets/J22.d93843e1.png";
const _imports_9 = "/open-source-autonomous-vehicle-controller/assets/J26.9fbff485.png";
const __pageData = JSON.parse('{"title":"Hardware","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Hardware.md"}');
const _sfc_main = { name: "guide/Hardware.md" };
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="hardware" tabindex="-1">Hardware <a class="header-anchor" href="#hardware" aria-label="Permalink to &quot;Hardware&quot;">​</a></h1><h2 id="specifications" tabindex="-1">Specifications <a class="header-anchor" href="#specifications" aria-label="Permalink to &quot;Specifications&quot;">​</a></h2><h3 id="processor" tabindex="-1">Processor <a class="header-anchor" href="#processor" aria-label="Permalink to &quot;Processor&quot;">​</a></h3><ul><li>32-bit Microchip PIC32MX795F512L</li><li>512KB Flash</li><li>128KB RAM</li><li>80 MHz operating speed</li></ul><h3 id="power" tabindex="-1">Power <a class="header-anchor" href="#power" aria-label="Permalink to &quot;Power&quot;">​</a></h3><ul><li>Operating power: <ul><li>Voltage regulator: Texas Instruments PTN78020W</li><li>Input voltage range: 7V-36V</li></ul></li><li>Micro-USB input (powered by personal computer)</li><li>USB-C input (powered by single board computer)</li></ul><h3 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h3><ul><li>2x I2C ports <ul><li>Support for 1x LiDAR sensor</li></ul></li><li>1x CAN bus interface</li><li>5x SPI bus ports <ul><li>Support for 1x IMU sensor</li></ul></li><li>4x PWM outputs</li><li>4x GPIO pins</li><li>1x input capture pin</li><li>3x UART ports <ul><li>Support for 1x GPS sensor, 1x telemetry, and 1x FrSky RC receiver</li></ul></li><li>ICSP pins to connect to a PICkit in-circuit debugger</li></ul><h3 id="dimensions" tabindex="-1">Dimensions <a class="header-anchor" href="#dimensions" aria-label="Permalink to &quot;Dimensions&quot;">​</a></h3><ul><li>Weight: 35g</li><li>Width: 54.61mm</li><li>Height: 10.00mm</li><li>Length: 106.68mm</li></ul><h2 id="board-architecture" tabindex="-1">Board Architecture <a class="header-anchor" href="#board-architecture" aria-label="Permalink to &quot;Board Architecture&quot;">​</a></h2><p><img src="' + _imports_0 + '" alt="Board Architecture"></p><h2 id="osavc-pinout" tabindex="-1">OSAVC PinOut <a class="header-anchor" href="#osavc-pinout" aria-label="Permalink to &quot;OSAVC PinOut&quot;">​</a></h2><p><img src="' + _imports_1 + '" alt="OSAVC Pinout"></p><table><thead><tr><th>Pin</th><th>Signal</th><th>Usage</th></tr></thead><tbody><tr><td>1</td><td>Power Supply</td><td>Use an external connector to power the OSAVC with a DC power supply</td></tr><tr><td>2</td><td>External Input</td><td><ul><li>Ground lane consists of all bottom pins </li><li>Power lane (5V) consists of all middle pins</li><li>Top pin is for input capturing</li></ul></td></tr><tr><td>3</td><td>GPIO</td><td><ul><li>Ground lane consists of all bottom pins </li><li>Power lane (5V) consists of all middle pins</li><li>Top pins may be used as input or outputs</li></ul></td></tr><tr><td>4</td><td>PWM</td><td><ul><li>Ground lane consists of all bottom pins </li><li>Power lane (5V) consists of all middle pins</li><li>PWM output consists of all top pins</li></ul></td></tr><tr><td>5</td><td>J5 Jumper</td><td><ul><li>Placing the shorting block on the J5 pins supplies 5V to the power lane</li><li>If removed, 0V is supplied</li></ul></td></tr><tr><td>6</td><td>J23 USB-C Connector</td><td>Connect the OSAVC to a single board computer to power and communicate with it</td></tr><tr><td>7</td><td>J16 SPI</td><td>J16 SPI-1</td></tr><tr><td>8</td><td>J17 SPI</td><td>J17 SPI-2</td></tr><tr><td>9</td><td>J18 SPI</td><td>J18 SPI-3</td></tr><tr><td>10</td><td>J19 SPI</td><td>J19 SPI-4</td></tr><tr><td>11</td><td>J3 micro-USB connector</td><td>Connect the OSAVC to a PC to power and communicate with it</td></tr><tr><td>12</td><td>Reset Button</td><td>This button can be used to reset the microcontroller, restarting operation from the boot loader.</td></tr><tr><td>13</td><td>J2 ICSP</td><td>In circuit serial programming pins to connect to a PICkit in-circuit debugger</td></tr><tr><td>14</td><td>J21 I2C</td><td></td></tr><tr><td>15</td><td>J15 GPS</td><td></td></tr><tr><td>16</td><td>J20 I2C-LiDAR</td><td></td></tr><tr><td>17</td><td>J13 Telemetry</td><td></td></tr><tr><td>18</td><td>J14 RC RX</td><td></td></tr><tr><td>19</td><td>J22 CAN</td><td></td></tr><tr><td>20</td><td>J26 SPI-IMU</td><td></td></tr></tbody></table><h3 id="j16-j19-pinout" tabindex="-1">J16-J19 Pinout <a class="header-anchor" href="#j16-j19-pinout" aria-label="Permalink to &quot;J16-J19 Pinout&quot;">​</a></h3><p><img class="padding" width="300" height="300" src="' + _imports_2 + '"></p><table><thead><tr><th>Pin</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th></tr></thead><tbody><tr><td>Signal</td><td>3V</td><td>RE</td><td>SCK</td><td>SDO</td><td>SDI</td><td>Ground</td></tr></tbody></table><p> </p><h3 id="j13-pinout" tabindex="-1">J13 Pinout <a class="header-anchor" href="#j13-pinout" aria-label="Permalink to &quot;J13 Pinout&quot;">​</a></h3><p><img width="350" height="350" src="' + _imports_3 + '"></p><table><thead><tr><th>Pin</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr><td>Signal</td><td>5V</td><td>TX</td><td>RX</td><td>Ground</td></tr></tbody></table><h3 id="j14-pinout" tabindex="-1">J14 Pinout <a class="header-anchor" href="#j14-pinout" aria-label="Permalink to &quot;J14 Pinout&quot;">​</a></h3><p><img width="350" height="350" src="' + _imports_4 + '"></p><table><thead><tr><th>Pin</th><th>1</th><th>2</th><th>3</th></tr></thead><tbody><tr><td>Signal</td><td>Ground</td><td>5V</td><td>RX</td></tr></tbody></table><p> </p><h3 id="j15-pinout" tabindex="-1">J15 Pinout <a class="header-anchor" href="#j15-pinout" aria-label="Permalink to &quot;J15 Pinout&quot;">​</a></h3><p><img width="350" height="350" src="' + _imports_5 + '"></p><table><thead><tr><th>Pin</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th></tr></thead><tbody><tr><td>Signal</td><td>5V</td><td>RTX</td><td>RX</td><td>SCL</td><td>SDA</td><td>Ground</td></tr></tbody></table><p> </p><h3 id="j20-pinout" tabindex="-1">J20 Pinout <a class="header-anchor" href="#j20-pinout" aria-label="Permalink to &quot;J20 Pinout&quot;">​</a></h3><p><img width="350" height="350" src="' + _imports_6 + '"></p><table><thead><tr><th>Pin</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th></tr></thead><tbody><tr><td>Signal</td><td>5V</td><td>RE</td><td>SCL</td><td>SDA</td><td>Ground</td></tr></tbody></table><p> </p><h3 id="j21-pinout" tabindex="-1">J21 Pinout <a class="header-anchor" href="#j21-pinout" aria-label="Permalink to &quot;J21 Pinout&quot;">​</a></h3><p><img width="350" height="350" src="' + _imports_7 + '"></p><table><thead><tr><th>Pin</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr><td>Signal</td><td>Ground</td><td>3V</td><td>SDA</td><td>SCL</td></tr></tbody></table><p> </p><h3 id="j22-pinout" tabindex="-1">J22 Pinout <a class="header-anchor" href="#j22-pinout" aria-label="Permalink to &quot;J22 Pinout&quot;">​</a></h3><p><img width="350" height="300" src="' + _imports_8 + '"></p><table><thead><tr><th>Pin</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr><td>Signal</td><td>5V</td><td>RX</td><td>TX</td><td>Ground</td></tr></tbody></table><p> </p><h3 id="j26-pinout" tabindex="-1">J26 Pinout <a class="header-anchor" href="#j26-pinout" aria-label="Permalink to &quot;J26 Pinout&quot;">​</a></h3><p><img width="350" height="350" src="' + _imports_9 + '"></p><table><thead><tr><th>Pin</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th></tr></thead><tbody><tr><td>Signal</td><td>RE</td><td>SDI</td><td>SDK</td><td>SDO</td><td>3V</td><td>Ground</td></tr></tbody></table><p> </p><h2 id="list-of-devices-sensors-and-peripherial-supported-by-the-osavc" tabindex="-1">List of devices (sensors and peripherial) supported by the OSAVC. <a class="header-anchor" href="#list-of-devices-sensors-and-peripherial-supported-by-the-osavc" aria-label="Permalink to &quot;List of devices (sensors and peripherial) supported by the OSAVC.&quot;">​</a></h2><table><thead><tr><th>Device</th><th>Model</th><th>Interface</th><th>Note</th></tr></thead><tbody><tr><td>IMU</td><td>TDK ICM20948</td><td>SPI1</td><td></td></tr><tr><td>GPS</td><td>u-blox NEO M8N</td><td>UART2</td><td></td></tr><tr><td>Encoder</td><td>AS 5047D</td><td>SPI2</td><td>12 bit, up to four devices</td></tr><tr><td>Battery voltage</td><td>N/A</td><td>AN0</td><td>Scaled 1:8</td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>GPIO</td><td>N/A</td><td>AN1-4/RB2-5</td><td>Analog or digital</td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>LiDAR</td><td>Garmin V3HP</td><td>I2C2</td><td></td></tr><tr><td>ESC</td><td>generic</td><td>OC2-5</td><td>Bidirectional/unidirectional</td></tr><tr><td>Servo</td><td>generic</td><td>OC2-5</td><td>Shared with ESC</td></tr><tr><td>RC receiver</td><td>FrSky serial</td><td>UART5</td><td>SBUS protocol</td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>Radio</td><td>MRO</td><td>UART4</td><td>915 MHz, ASCII</td></tr><tr><td>EEPROM</td><td>Microchip 25LC256</td><td>I2C1</td><td>256 Kbit</td></tr><tr><td>USB</td><td>FTDI 2232RL</td><td>UART1</td><td>Serial-USB converter</td></tr><tr><td>Programmer</td><td>Microchip PICkit3/4ICSP</td><td>In-circuit serial programmer</td><td></td></tr><tr><td>User I2C</td><td>N/A</td><td>I2C1</td><td>Connector provided</td></tr><tr><td>User CAN</td><td>N/A</td><td>CAN1</td><td>For external transceiver</td></tr></tbody></table>', 48);
const _hoisted_49 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_49);
}
const Hardware = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  Hardware as default
};
